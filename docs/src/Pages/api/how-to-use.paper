<template>
    <div class='api-view'>
        <p>
            首先，让我们来了解一个这个库主要解决的问题是什么，如何使用以及问题反馈等基本信息。
        </p>
        <h2 id='fixed-purpose'>
            关注的问题
        </h2>
        <p>
            本库致力于提供更简单的Web端二维绘图接口，主要包括这些方面：画笔、辅助计算、结点操作和一些零碎的小工具方法。我们希望绘图是简单而有趣的、高效而愉悦的！
        </p>
        <p>
            主要是在svg和canvas2D上绘图，虽然有提供比如Maritx4坐标变换等三维相关方法，这是考虑到一些潜在的需求。
        </p>
        <h2 id='fixed-import'>
            如何引入?
        </h2>
        <p>
            如果你开发的是一个web项目，直接在页面引入打包后的文件后即可（在代码中通过image2D或$$调用）：
        </p>
        <pre q-code>
            <script src="https://cdn.jsdelivr.net/npm/image2d"></script>
        </pre>
        <p>如果你想通过npm方式管理，首先你需要通过命令行安装image2D，就像这样：</p>
        <pre q-code>
npm install --save image2d
        </pre>
        <p>安装好了以后，在需要的地方引入即可：</p>
        <pre q-code>
import $$ from "image2d";
        </pre>
        <h2 id='fixed-example'>
            一个简单的用例
        </h2>
        <p>
            作为入门，我们这里只是简单的说明一下如何绘图，具体的辅助方法和一些细节在文档有进行说明，或者你可以提issue进行交流，为了简化，这里不再赘述。
        </p>
        <h6>
            获取画笔
        </h6>
        <p>
            绘图的第一步当然是获取画笔了，画笔分为两种：Canvas2D和SVG，我们来看看具体的代码：
        </p>
        <pre q-code>
var painter=$$("#painter").painter();
        </pre>
        <p>
            上面的$$("#painter")返回一个image2D对象，通过ID选择器查找结点，然后调用对象上的painter方法就可以获取画笔了。
        </p>
        <p>
            如何判断画笔的类型？如果结点是canvas获取的就是Canvas2D画笔，如果结点是svg获取的就是SVG画笔。
        </p>
        <h6>
            配置
        </h6>
        <p>
            不管是什么画笔，都一样可以进行配置（当然有缺省值），比如画笔的粗细，颜色等，下面列出部分选项：
        </p>
        <pre q-code>
painter.config({
    "font-size":文字大小,
    "lineWidth":线条宽度,
    ......
});
        </pre>
        <p>
            具体的配置选项请查看画笔一节。
        </p>
        <h6>
            绘图方法
        </h6>
        <p>
            画笔获取并配置好了以后，直接调用画笔上的方法即可绘图，我们拿canvas举例子。
        </p>
        <pre q-code>
$$("canvas")
.attr({
    "with":200,
    "height":100
})
.painter()
.config({
    "lineWidth":10,
    "fillStyle":"red",
    "strokeStyle":"green"
})
.fillArc(100, 0, 50, 100, 0, Math.PI)
.strokeArc(100, 0, 50, 95, 0, Math.PI);
        </pre>
        <p>
            具体的绘图方法也请查看文档。绘制的结果如下：
        </p>
        <div class="guider-demo1"></div>
        <p>
            怎么样？是不是很简单，虽然直接使用canvas或svg也可以实现，不过借助这个库绘图会更简单，你可以把更多的精力放在绘制出更有趣的作品上。
        </p>
        <h2 id='fixed-help'>
            获取帮助
        </h2>
        <p>
            在使用image2D的时候，如果遇到任何疑惑或问题，包括建议或对未来版本的想法，请先在
            <a target="_blank" href="https://github.com/hai2007/image2D/issues">Github issue</a>
            上查找是否存在相似内容，然后进行补充或追问，当然也可以增加新的话题进行交流，除非特殊情况，你会在48小时内获得
            <a href="mailto:2501482523@qq.com">作者</a>
            回复。
        </p>

    </div>
</template>
<script>
    import changeActive from '../../Service/changeActive.js';
    import fixedScroll from '../../Service/fixedScroll.js';
    export default {
        created() {
            changeActive('menu-2', 'how-to-use');
        },
        mounted() {
            fixedScroll();
        }
    };
</script>
<style>
    .guider-demo1 {
        background-image: url("../../assets/guider-demo1.png");
        height: 1.6rem;
        background-repeat: no-repeat;
        background-position: left center;
        background-size: auto 100%;
    }
</style>
